def foo(n : size, a : f32, c : f32):
  ----------------------- {}
  tmp : f32[n]
  ----------------------- {}
  for i in seq(0, n):
    --------------------- {}
    a_1 =\i \phi(i == 0 ? a : a_2[i - 1])
    --------------------- {}
    c_1 =\i \phi(i == 0 ? c : c_2[i - 1])
    --------------------- {}
    tmp_1 =\i \d0 \phi(i == 0 ? tmp[d0] : tmp_2[i - 1, d0])
    --------------------- {}
    for j in seq(0, 4):
      ------------------- {}
      a_3 =\j \i \phi(j == 0 ? a_1[i] : a_4[j - 1, i])
      ------------------- {}
      c_3 =\j \i \phi(j == 0 ? c_1[i] : c_3[j - 1, i])
      ------------------- {}
      tmp_3 =\j \i \d0 \phi(j == 0 ? tmp_1[i, d0] : tmp_4[j - 1, i, d0])
      ------------------- {}
      tmp_4 =\j \i \d0 \phi(d0 == i and True ? a_3[j, i] : tmp_3[j, i, d0])
      ------------------- {}
      a_4 =\j \i \phi(True ? tmp_4[j, i, i] + 1.0 : a_3[j, i])
      ------------------- {}
    --------------------- {}
    a_2 =\i \phi(4 > 0 ? a_4[4 - 1, i] : a_1[i])
    --------------------- {}
    c_2 =\i \phi(4 > 0 ? c_3[4 - 1, i] : c_1[i])
    --------------------- {}
    tmp_2 =\i \d0 \phi(4 > 0 ? tmp_4[4 - 1, i, d0] : tmp_1[i, d0])
    --------------------- {}
  ----------------------- {}
  a_5 = \phi(n > 0 ? a_2[n - 1] : a)
  ----------------------- {}
  c_4 = \phi(n > 0 ? c_2[n - 1] : c)
  ----------------------- {}
  tmp_5 =\d0 \phi(n > 0 ? tmp_2[n - 1, d0] : tmp[d0])
  ----------------------- {}
  for i_1 in seq(0, n):
    --------------------- {}
    a_6 =\i_1 \phi(i_1 == 0 ? a_5 : a_6[i_1 - 1])
    --------------------- {}
    c_5 =\i_1 \phi(i_1 == 0 ? c_4 : c_6[i_1 - 1])
    --------------------- {}
    tmp_6 =\i_1 \d0 \phi(i_1 == 0 ? tmp_5[d0] : tmp_6[i_1 - 1, d0])
    --------------------- {}
    c_6 +=\i_1 \phi(True ? tmp_6[i_1, i_1] : c_5[i_1])
    --------------------- {}
  ----------------------- {}
  a_7 = \phi(n > 0 ? a_6[n - 1] : a_5)
  ----------------------- {}
  c_7 = \phi(n > 0 ? c_6[n - 1] : c_4)
  ----------------------- {}
  tmp_7 =\d0 \phi(n > 0 ? tmp_6[n - 1, d0] : tmp_5[d0])
  ----------------------- {}